{"create": {"dataset_create": "Create a new dataset (package).\n\n    You must be authorized to create new datasets. If you specify any groups\n    for the new dataset, you must also be authorized to edit these groups.\n\n    Plugins may change the parameters of this function depending on the value\n    of the ``type`` parameter, see the ``IDatasetForm`` plugin interface.\n\n    :param name: the name of the new dataset, must be between 2 and 100\n        characters long and contain only lowercase alphanumeric characters,\n        ``-`` and ``_``, e.g. ``'warandpeace'``\n    :type name: string\n    :param title: the title of the dataset (optional, default: same as\n        ``name``)\n    :type title: string\n    :param author: the name of the dataset's author (optional)\n    :type author: string\n    :param author_email: the email address of the dataset's author (optional)\n    :type author_email: string\n    :param maintainer: the name of the dataset's maintainer (optional)\n    :type maintainer: string\n    :param maintainer_email: the email address of the dataset's maintainer\n        (optional)\n    :type maintainer_email: string\n    :param license_id: the id of the dataset's license, see ``license_list()``\n        for available values (optional)\n    :type license_id: license id string\n    :param notes: a description of the dataset (optional)\n    :type notes: string\n    :param url: a URL for the dataset's source (optional)\n    :type url: string\n    :param version: (optional)\n    :type version: string, no longer than 100 characters\n    :param state: the current state of the dataset, e.g. ``'active'`` or\n        ``'deleted'``, only active datasets show up in search results and\n        other lists of datasets, this parameter will be ignored if you are not\n        authorized to change the state of the dataset (optional, default:\n        ``'active'``)\n    :type state: string\n    :param type: the type of the dataset (optional), ``IDatasetForm`` plugins\n        associate themselves with different dataset types and provide custom\n        dataset handling behaviour for these types\n    :type type: string\n    :param resources: the dataset's resources, see ``resource_create()``\n        for the format of resource dictionaries (optional)\n    :type resources: list of resource dictionaries\n    :param tags: the dataset's tags, see ``tag_create()`` for the format\n        of tag dictionaries (optional)\n    :type tags: list of tag dictionaries\n    :param extras: the dataset's extras (optional), extras are arbitrary\n        (key: value) metadata items that can be added to datasets, each extra\n        dictionary should have keys ``'key'`` (a string), ``'value'`` (a\n        string)\n    :type extras: list of dataset extra dictionaries\n    :param relationships_as_object: see ``package_relationship_create()`` for\n        the format of relationship dictionaries (optional)\n    :type relationships_as_object: list of relationship dictionaries\n    :param relationships_as_subject: see ``package_relationship_create()`` for\n        the format of relationship dictionaries (optional)\n    :type relationships_as_subject: list of relationship dictionaries\n    :param groups: the groups to which the dataset belongs (optional), each\n        group dictionary should have one or more of the following keys which\n        identify an existing group:\n        ``'id'`` (the id of the group, string), ``'name'`` (the name of the\n        group, string), ``'title'`` (the title of the group, string), to see\n        which groups exist call ``group_list()``\n    :type groups: list of dictionaries\n    :param owner_org: the id of the dataset's owning organization, see\n        ``organization_list()`` or ``organization_list_for_user`` for\n        available values (optional)\n    :type owner_org: string\n\n    :returns: the newly created dataset (unless 'return_id_only' is set to True\n              in the context, in which case just the dataset id will be returned)\n    :rtype: dictionary\n\n    ", "resource_create": "Appends a new resource to a datasets list of resources.\n\n    :param package_id: id of package that the resource needs should be added to.\n    :type package_id: string\n    :param url: url of resource\n    :type url: string\n    :param revision_id: (optional)\n    :type revisiion_id: string\n    :param description: (optional)\n    :type description: string\n    :param format: (optional)\n    :type format: string\n    :param hash: (optional)\n    :type hash: string\n    :param name: (optional)\n    :type name: string\n    :param resource_type: (optional)\n    :type resource_type: string\n    :param mimetype: (optional)\n    :type mimetype: string\n    :param mimetype_inner: (optional)\n    :type mimetype_inner: string\n    :param webstore_url: (optional)\n    :type webstore_url: string\n    :param cache_url: (optional)\n    :type cache_url: string\n    :param size: (optional)\n    :type size: int\n    :param created: (optional)\n    :type created: iso date string\n    :param last_modified: (optional)\n    :type last_modified: iso date string\n    :param cache_last_updated: (optional)\n    :type cache_last_updated: iso date string\n    :param webstore_last_updated: (optional)\n    :type webstore_last_updated: iso date string\n    :param upload: (optional)\n    :type upload: FieldStorage (optional) needs multipart/form-data\n\n    :returns: the newly created resource\n    :rtype: dictionary\n\n    ", "related_create": "Add a new related item to a dataset.\n\n    You must provide your API key in the Authorization header.\n\n    :param title: the title of the related item\n    :type title: string\n    :param type: the type of the related item, e.g. ``'Application'``,\n        ``'Idea'`` or ``'Visualisation'``\n    :type type: string\n    :param id: the id of the related item (optional)\n    :type id: string\n    :param description: the description of the related item (optional)\n    :type description: string\n    :param url: the URL to the related item (optional)\n    :type url: string\n    :param image_url: the URL to the image for the related item (optional)\n    :type image_url: string\n    :param dataset_id: the name or id of the dataset that the related item\n        belongs to (optional)\n    :type dataset_id: string\n\n    :returns: the newly created related item\n    :rtype: dictionary\n\n    ", "follow_user": "Start following another user.\n\n    You must provide your API key in the Authorization header.\n\n    :param id: the id or name of the user to follow, e.g. ``'joeuser'``\n    :type id: string\n\n    :returns: a representation of the 'follower' relationship between yourself\n        and the other user\n    :rtype: dictionary\n\n    ", "rating_create": "Rate a dataset (package).\n\n    You must provide your API key in the Authorization header.\n\n    :param package: the name or id of the dataset to rate\n    :type package: string\n    :param rating: the rating to give to the dataset, an integer between 1 and\n        5\n    :type rating: int\n\n    :returns: a dictionary with two keys: ``'rating average'`` (the average\n        rating of the dataset you rated) and ``'rating count'`` (the number of\n        times the dataset has been rated)\n    :rtype: dictionary\n\n    ", "organization_create": "Create a new organization.\n\n    You must be authorized to create organizations.\n\n    Plugins may change the parameters of this function depending on the value\n    of the ``type`` parameter, see the ``IGroupForm`` plugin interface.\n\n    :param name: the name of the organization, a string between 2 and 100 characters\n        long, containing only lowercase alphanumeric characters, ``-`` and\n        ``_``\n    :type name: string\n    :param id: the id of the organization (optional)\n    :type id: string\n    :param title: the title of the organization (optional)\n    :type title: string\n    :param description: the description of the organization (optional)\n    :type description: string\n    :param image_url: the URL to an image to be displayed on the organization's page\n        (optional)\n    :type image_url: string\n    :param state: the current state of the organization, e.g. ``'active'`` or\n        ``'deleted'``, only active organizations show up in search results and\n        other lists of organizations, this parameter will be ignored if you are not\n        authorized to change the state of the organization (optional, default:\n        ``'active'``)\n    :type state: string\n    :param approval_status: (optional)\n    :type approval_status: string\n    :param extras: the organization's extras (optional), extras are arbitrary\n        (key: value) metadata items that can be added to organizations, each extra\n        dictionary should have keys ``'key'`` (a string), ``'value'`` (a\n        string), and optionally ``'deleted'``\n    :type extras: list of dataset extra dictionaries\n    :param packages: the datasets (packages) that belong to the organization, a list\n        of dictionaries each with keys ``'name'`` (string, the id or name of\n        the dataset) and optionally ``'title'`` (string, the title of the\n        dataset)\n    :type packages: list of dictionaries\n    :param users: the users that belong to the organization, a list of dictionaries\n        each with key ``'name'`` (string, the id or name of the user) and\n        optionally ``'capacity'`` (string, the capacity in which the user is\n        a member of the organization)\n    :type users: list of dictionaries\n\n    :returns: the newly created organization\n    :rtype: dictionary\n\n    ", "group_create": "Create a new group.\n\n    You must be authorized to create groups.\n\n    Plugins may change the parameters of this function depending on the value\n    of the ``type`` parameter, see the ``IGroupForm`` plugin interface.\n\n    :param name: the name of the group, a string between 2 and 100 characters\n        long, containing only lowercase alphanumeric characters, ``-`` and\n        ``_``\n    :type name: string\n    :param id: the id of the group (optional)\n    :type id: string\n    :param title: the title of the group (optional)\n    :type title: string\n    :param description: the description of the group (optional)\n    :type description: string\n    :param image_url: the URL to an image to be displayed on the group's page\n        (optional)\n    :type image_url: string\n    :param type: the type of the group (optional), ``IGroupForm`` plugins\n        associate themselves with different group types and provide custom\n        group handling behaviour for these types\n        Cannot be 'organization'\n    :type type: string\n    :param state: the current state of the group, e.g. ``'active'`` or\n        ``'deleted'``, only active groups show up in search results and\n        other lists of groups, this parameter will be ignored if you are not\n        authorized to change the state of the group (optional, default:\n        ``'active'``)\n    :type state: string\n    :param approval_status: (optional)\n    :type approval_status: string\n    :param extras: the group's extras (optional), extras are arbitrary\n        (key: value) metadata items that can be added to groups, each extra\n        dictionary should have keys ``'key'`` (a string), ``'value'`` (a\n        string), and optionally ``'deleted'``\n    :type extras: list of dataset extra dictionaries\n    :param packages: the datasets (packages) that belong to the group, a list\n        of dictionaries each with keys ``'name'`` (string, the id or name of\n        the dataset) and optionally ``'title'`` (string, the title of the\n        dataset)\n    :type packages: list of dictionaries\n    :param groups: the groups that belong to the group, a list of dictionaries\n        each with key ``'name'`` (string, the id or name of the group) and\n        optionally ``'capacity'`` (string, the capacity in which the group is\n        a member of the group)\n    :type groups: list of dictionaries\n    :param users: the users that belong to the group, a list of dictionaries\n        each with key ``'name'`` (string, the id or name of the user) and\n        optionally ``'capacity'`` (string, the capacity in which the user is\n        a member of the group)\n    :type users: list of dictionaries\n\n    :returns: the newly created group\n    :rtype: dictionary\n\n    ", "group_member_create": "Make a user a member of a group.\n\n    You must be authorized to edit the group.\n\n    :param id: the id or name of the group\n    :type id: string\n    :param username: name or id of the user to be made member of the group\n    :type username: string\n    :param role: role of the user in the group. One of ``member``, ``editor``,\n        or ``admin``\n    :type role: string\n\n    :returns: the newly created (or updated) membership\n    :rtype: dictionary\n    ", "organization_member_create": "Make a user a member of an organization.\n\n    You must be authorized to edit the organization.\n\n    :param id: the id or name of the organization\n    :type id: string\n    :param username: name or id of the user to be made member of the\n        organization\n    :type username: string\n    :param role: role of the user in the organization. One of ``member``,\n        ``editor``, or ``admin``\n    :type role: string\n\n    :returns: the newly created (or updated) membership\n    :rtype: dictionary\n    ", "dataset_relationship_create": "Create a relationship between two datasets (packages).\n\n    You must be authorized to edit both the subject and the object datasets.\n\n    :param subject: the id or name of the dataset that is the subject of the\n        relationship\n    :type subject: string\n    :param object: the id or name of the dataset that is the object of the\n        relationship\n    :param type: the type of the relationship, one of ``'depends_on'``,\n        ``'dependency_of'``, ``'derives_from'``, ``'has_derivation'``,\n        ``'links_to'``, ``'linked_from'``, ``'child_of'`` or ``'parent_of'``\n    :type type: string\n    :param comment: a comment about the relationship (optional)\n    :type comment: string\n\n    :returns: the newly created package relationship\n    :rtype: dictionary\n\n    ", "user_invite": "Invite a new user.\n\n    You must be authorized to create group members.\n\n    :param email: the email of the user to be invited to the group\n    :type email: string\n    :param group_id: the id or name of the group\n    :type group_id: string\n    :param role: role of the user in the group. One of ``member``, ``editor``,\n        or ``admin``\n    :type role: string\n\n    :returns: the newly created yser\n    :rtype: dictionary\n    ", "activity_create": "Create a new activity stream activity.\n\n    You must be a sysadmin to create new activities.\n\n    :param user_id: the name or id of the user who carried out the activity,\n        e.g. ``'seanh'``\n    :type user_id: string\n    :param object_id: the name or id of the object of the activity, e.g.\n        ``'my_dataset'``\n    :param activity_type: the type of the activity, this must be an activity\n        type that CKAN knows how to render, e.g. ``'new package'``,\n        ``'changed user'``, ``'deleted group'`` etc. (for a full list see\n        ``activity_renderers`` in ``ckan/logic/action/get.py``\n    :type activity_type: string\n    :param data: any additional data about the activity\n    :type data: dictionary\n\n    :returns: the newly created activity\n    :rtype: dictionary\n\n    ", "member_create": "Make an object (e.g. a user, dataset or group) a member of a group.\n\n    If the object is already a member of the group then the capacity of the\n    membership will be updated.\n\n    You must be authorized to edit the group.\n\n    :param id: the id or name of the group to add the object to\n    :type id: string\n    :param object: the id or name of the object to add\n    :type object: string\n    :param object_type: the type of the object being added, e.g. ``'package'``\n        or ``'user'``\n    :type object_type: string\n    :param capacity: the capacity of the membership\n    :type capacity: string\n\n    :returns: the newly created (or updated) membership\n    :rtype: dictionary\n\n    ", "follow_dataset": "Start following a dataset.\n\n    You must provide your API key in the Authorization header.\n\n    :param id: the id or name of the dataset to follow, e.g. ``'warandpeace'``\n    :type id: string\n\n    :returns: a representation of the 'follower' relationship between yourself\n        and the dataset\n    :rtype: dictionary\n\n    ", "vocabulary_create": "Create a new tag vocabulary.\n\n    You must be a sysadmin to create vocabularies.\n\n    :param name: the name of the new vocabulary, e.g. ``'Genre'``\n    :type name: string\n    :param tags: the new tags to add to the new vocabulary, for the format of\n        tag dictionaries see ``tag_create()``\n    :type tags: list of tag dictionaries\n\n    :returns: the newly-created vocabulary\n    :rtype: dictionary\n\n    ", "user_create": "Create a new user.\n\n    You must be authorized to create users.\n\n    :param name: the name of the new user, a string between 2 and 100\n        characters in length, containing only lowercase alphanumeric\n        characters, ``-`` and ``_``\n    :type name: string\n    :param email: the email address for the new user\n    :type email: string\n    :param password: the password of the new user, a string of at least 4\n        characters\n    :type password: string\n    :param id: the id of the new user (optional)\n    :type id: string\n    :param fullname: the full name of the new user (optional)\n    :type fullname: string\n    :param about: a description of the new user (optional)\n    :type about: string\n    :param openid: (optional)\n    :type openid: string\n\n    :returns: the newly created yser\n    :rtype: dictionary\n\n    ", "tag_create": "Create a new vocabulary tag.\n\n    You must be a sysadmin to create vocabulary tags.\n\n    You can only use this function to create tags that belong to a vocabulary,\n    not to create free tags. (To create a new free tag simply add the tag to\n    a package, e.g. using the ``package_update`` function.)\n\n    :param name: the name for the new tag, a string between 2 and 100\n        characters long containing only alphanumeric characters and ``-``,\n        ``_`` and ``.``, e.g. ``'Jazz'``\n    :type name: string\n    :param vocabulary_id: the name or id of the vocabulary that the new tag\n        should be added to, e.g. ``'Genre'``\n    :type vocabulary_id: string\n\n    :returns: the newly-created tag\n    :rtype: dictionary\n\n    ", "follow_group": "Start following a group.\n\n    You must provide your API key in the Authorization header.\n\n    :param id: the id or name of the group to follow, e.g. ``'roger'``\n    :type id: string\n\n    :returns: a representation of the 'follower' relationship between yourself\n        and the group\n    :rtype: dictionary\n\n    "}, "delete": {"dataset_delete": "Delete a dataset (package).\n\n    You must be authorized to delete the dataset.\n\n    :param id: the id or name of the dataset to delete\n    :type id: string\n\n    ", "vocabulary_delete": "Delete a tag vocabulary.\n\n    You must be a sysadmin to delete vocabularies.\n\n    :param id: the id of the vocabulary\n    :type id: string\n\n    ", "unfollow_user": "Stop following a user.\n\n    :param id: the id or name of the user to stop following\n    :type id: string\n\n    ", "organization_member_delete": "Remove a user from an organization.\n\n    You must be authorized to edit the organization.\n\n    :param id: the id or name of the organization\n    :type id: string\n    :param username: name or id of the user to be removed\n    :type username: string\n\n    ", "organization_purge": "Purge an organization.\n\n    .. warning:: Purging an organization cannot be undone!\n\n    Purging an organization completely removes the organization from the CKAN\n    database, whereas deleting an organization simply marks the organization as\n    deleted (it will no longer show up in the frontend, but is still in the\n    db).\n\n    You must be authorized to purge the organization.\n\n    :param id: the name or id of the organization to be purged\n    :type id: string\n\n    ", "unfollow_group": "Stop following a group.\n\n    :param id: the id or name of the group to stop following\n    :type id: string\n\n    ", "group_delete": "Delete a group.\n\n    You must be authorized to delete the group.\n\n    :param id: the name or id of the group\n    :type id: string\n\n    ", "organization_delete": "Delete an organization.\n\n    You must be authorized to delete the organization.\n\n    :param id: the name or id of the organization\n    :type id: string\n\n    ", "unfollow_dataset": "Stop following a dataset.\n\n    :param id: the id or name of the dataset to stop following\n    :type id: string\n\n    ", "tag_delete": "Delete a tag.\n\n    You must be a sysadmin to delete tags.\n\n    :param id: the id or name of the tag\n    :type id: string\n    :param vocabulary_id: the id or name of the vocabulary that the tag belongs\n        to (optional, default: None)\n    :type vocabulary_id: string\n\n    ", "resource_delete": "Delete a resource from a dataset.\n\n    You must be a sysadmin or the owner of the resource to delete it.\n\n    :param id: the id of the resource\n    :type id: string\n\n    ", "member_delete": "Remove an object (e.g. a user, dataset or group) from a group.\n\n    You must be authorized to edit a group to remove objects from it.\n\n    :param id: the id of the group\n    :type id: string\n    :param object: the id or name of the object to be removed\n    :type object: string\n    :param object_type: the type of the object to be removed, e.g. ``package``\n        or ``user``\n    :type object_type: string\n\n    ", "related_delete": "Delete a related item from a dataset.\n\n    You must be a sysadmin or the owner of the related item to delete it.\n\n    :param id: the id of the related item\n    :type id: string\n\n    ", "task_status_delete": "Delete a task status.\n\n    You must be a sysadmin to delete task statuses.\n\n    :param id: the id of the task status to delete\n    :type id: string\n\n    ", "group_member_delete": "Remove a user from a group.\n\n    You must be authorized to edit the group.\n\n    :param id: the id or name of the group\n    :type id: string\n    :param username: name or id of the user to be removed\n    :type username: string\n\n    ", "group_purge": "Purge a group.\n\n    .. warning:: Purging a group cannot be undone!\n\n    Purging a group completely removes the group from the CKAN database,\n    whereas deleting a group simply marks the group as deleted (it will no\n    longer show up in the frontend, but is still in the db).\n\n    You must be authorized to purge the group.\n\n    :param id: the name or id of the group to be purged\n    :type id: string\n\n    ", "user_delete": "Delete a user.\n\n    Only sysadmins can delete users.\n\n    :param id: the id or usernamename of the user to delete\n    :type id: string\n    ", "dataset_relationship_delete": "Delete a dataset (package) relationship.\n\n    You must be authorised to delete dataset relationships, and to edit both\n    the subject and the object datasets.\n\n    :param subject: the id or name of the dataset that is the subject of the\n        relationship\n    :type subject: string\n    :param object: the id or name of the dataset that is the object of the\n        relationship\n    :type object: string\n    :param type: the type of the relationship\n    :type type: string\n\n    "}, "update": {"related_update": "Update a related item.\n\n    You must be the owner of a related item to update it.\n\n    For further parameters see ``related_create()``.\n\n    :param id: the id of the related item to update\n    :type id: string\n\n    :returns: the updated related item\n    :rtype: dictionary\n\n    ", "task_status_update": "Update a task status.\n\n    :param id: the id of the task status to update\n    :type id: string\n    :param entity_id:\n    :type entity_id: string\n    :param entity_type:\n    :type entity_type: string\n    :param task_type:\n    :type task_type: string\n    :param key:\n    :type key: string\n    :param value: (optional)\n    :type value:\n    :param state: (optional)\n    :type state:\n    :param last_updated: (optional)\n    :type last_updated:\n    :param error: (optional)\n    :type error:\n\n    :returns: the updated task status\n    :rtype: dictionary\n\n    ", "send_email_notifications": "Send any pending activity stream notification emails to users.\n\n    You must provide a sysadmin's API key in the Authorization header of the\n    request, or call this action from the command-line via a `paster post ...`\n    command.\n\n    ", "make_latest_pending_dataset_active": "TODO: What does this function do?\n\n    You must be authorized to update the dataset.\n\n    :param id: the name or id of the dataset, e.g. ``'warandpeace'``\n    :type id: string\n\n    ", "dataset_relationship_update": "Update a relationship between two datasets (packages).\n\n    You must be authorized to edit both the subject and the object datasets.\n\n    :param id: the id of the package relationship to update\n    :type id: string\n    :param subject: the name or id of the dataset that is the subject of the\n        relationship (optional)\n    :type subject: string\n    :param object: the name or id of the dataset that is the object of the\n        relationship (optional)\n    :param type: the type of the relationship, one of ``'depends_on'``,\n        ``'dependency_of'``, ``'derives_from'``, ``'has_derivation'``,\n        ``'links_to'``, ``'linked_from'``, ``'child_of'`` or ``'parent_of'``\n        (optional)\n    :type type: string\n    :param comment: a comment about the relationship (optional)\n    :type comment: string\n\n    :returns: the updated relationship\n    :rtype: dictionary\n\n    ", "task_status_update_many": "Update many task statuses at once.\n\n    :param data: the task_status dictionaries to update, for the format of task\n        status dictionaries see ``task_status_update()``\n    :type data: list of dictionaries\n\n    :returns: the updated task statuses\n    :rtype: list of dictionaries\n\n    ", "organization_update": "Update a organization.\n\n    You must be authorized to edit the organization.\n\n    For further parameters see ``organization_create()``.\n\n    :param id: the name or id of the organization to update\n    :type id: string\n\n    :returns: the updated organization\n    :rtype: dictionary\n\n    ", "user_update": "Update a user account.\n\n    Normal users can only update their own user accounts. Sysadmins can update\n    any user account.\n\n    For further parameters see ``user_create()``.\n\n    :param id: the name or id of the user to update\n    :type id: string\n\n    :returns: the updated user account\n    :rtype: dictionary\n\n    ", "bulk_update_delete": " Make a list of datasets deleted\n\n    :param datasets: list of ids of the datasets to update\n    :type datasets: list of strings\n\n    :param org_id: id of the owning organization\n    :type org_id: int\n    ", "term_translation_update": "Create or update a term translation.\n\n    You must be a sysadmin to create or update term translations.\n\n    :param term: the term to be translated, in the original language, e.g.\n        ``'romantic novel'``\n    :type term: string\n    :param term_translation: the translation of the term, e.g.\n        ``'Liebesroman'``\n    :type term_translation: string\n    :param lang_code: the language code of the translation, e.g. ``'de'``\n    :type lang_code: string\n\n    :returns: the newly created or updated term translation\n    :rtype: dictionary\n\n    ", "dataset_update": "Update a dataset (package).\n\n    You must be authorized to edit the dataset and the groups that it belongs\n    to.\n\n    Plugins may change the parameters of this function depending on the value\n    of the dataset's ``type`` attribute, see the ``IDatasetForm`` plugin\n    interface.\n\n    For further parameters see ``package_create()``.\n\n    :param id: the name or id of the dataset to update\n    :type id: string\n\n    :returns: the updated dataset (if 'return_package_dict' is True in the\n              context, which is the default. Otherwise returns just the\n              dataset id)\n    :rtype: dictionary\n\n    ", "user_role_bulk_update": "Update the roles of many users or authorization groups for an object.\n\n    You must be authorized to update the domain object.\n\n    :param user_roles: the updated user roles, for the format of user role\n        dictionaries see ``user_role_update()``\n    :type user_roles: list of dictionaries\n\n    :returns: the updated roles of all users and authorization groups for the\n        domain object\n    :rtype: dictionary\n\n    ", "group_update": "Update a group.\n\n    You must be authorized to edit the group.\n\n    Plugins may change the parameters of this function depending on the value\n    of the group's ``type`` attribute, see the ``IGroupForm`` plugin interface.\n\n    For further parameters see ``group_create()``.\n\n    :param id: the name or id of the group to update\n    :type id: string\n\n    :returns: the updated group\n    :rtype: dictionary\n\n    ", "dataset_resource_reorder": "Reorder resources against datasets.  If only partial resource ids are\n    supplied then these are assumed to be first and the other resources will\n    stay in their original order\n\n    :param id: the id or name of the package to update\n    :type id: string\n    :param order: a list of resource ids in the order needed\n    :type list: list\n    ", "bulk_update_public": " Make a list of datasets public\n\n    :param datasets: list of ids of the datasets to update\n    :type datasets: list of strings\n\n    :param org_id: id of the owning organization\n    :type org_id: int\n    ", "user_role_update": "Update a user or authorization group's roles for a domain object.\n\n    The ``user`` parameter must be given.\n\n    You must be authorized to update the domain object.\n\n    To delete all of a user or authorization group's roles for domain object,\n    pass an empty list ``[]`` to the ``roles`` parameter.\n\n    :param user: the name or id of the user\n    :type user: string\n    :param domain_object: the name or id of the domain object (e.g. a package,\n        group or authorization group)\n    :type domain_object: string\n    :param roles: the new roles, e.g. ``['editor']``\n    :type roles: list of strings\n\n    :returns: the updated roles of all users for the\n        domain object\n    :rtype: dictionary\n\n    ", "dataset_owner_org_update": "Update the owning organization of a dataset\n\n    :param id: the name or id of the dataset to update\n    :type id: string\n\n    :param organization_id: the name or id of the owning organization\n    :type id: string\n    ", "resource_update": "Update a resource.\n\n    To update a resource you must be authorized to update the dataset that the\n    resource belongs to.\n\n    For further parameters see ``resource_create()``.\n\n    :param id: the id of the resource to update\n    :type id: string\n\n    :returns: the updated resource\n    :rtype: string\n\n    ", "vocabulary_update": "Update a tag vocabulary.\n\n    You must be a sysadmin to update vocabularies.\n\n    For further parameters see ``vocabulary_create()``.\n\n    :param id: the id of the vocabulary to update\n    :type id: string\n\n    :returns: the updated vocabulary\n    :rtype: dictionary\n\n    ", "bulk_update_private": " Make a list of datasets private\n\n    :param datasets: list of ids of the datasets to update\n    :type datasets: list of strings\n\n    :param org_id: id of the owning organization\n    :type org_id: int\n    ", "dashboard_mark_activities_old": "Mark all the authorized user's new dashboard activities as old.\n\n    This will reset dashboard_new_activities_count to 0.\n\n    ", "term_translation_update_many": "Create or update many term translations at once.\n\n    :param data: the term translation dictionaries to create or update,\n        for the format of term translation dictionaries see\n        ``term_translation_update()``\n    :type data: list of dictionaries\n\n    :returns: a dictionary with key ``'success'`` whose value is a string\n        stating how many term translations were updated\n    :rtype: string\n\n    "}, "get": {"tag_autocomplete": "Return a list of tag names that contain a given string.\n\n    By default only free tags (tags that don't belong to any vocabulary) are\n    searched. If the ``vocabulary_id`` argument is given then only tags\n    belonging to that vocabulary will be searched instead.\n\n    :param query: the string to search for\n    :type query: string\n    :param vocabulary_id: the id or name of the tag vocabulary to search in\n      (optional)\n    :type vocabulary_id: string\n    :param fields: deprecated\n    :type fields: dictionary\n    :param limit: the maximum number of tags to return\n    :type limit: int\n    :param offset: when ``limit`` is given, the offset to start returning tags\n        from\n    :type offset: int\n\n    :rtype: list of strings\n\n    ", "status_show": "Return a dictionary with information about the site's configuration.\n\n    :rtype: dictionary\n\n    ", "group_follower_count": "Return the number of followers of a group.\n\n    :param id: the id or name of the group\n    :type id: string\n\n    :rtype: int\n\n    ", "group_list_authz": "Return the list of groups that the user is authorized to edit.\n\n    :param available_only: remove the existing groups in the package\n      (optional, default: ``False``)\n    :type available_only: boolean\n\n    :param am_member: if True return only the groups the logged-in user is a\n      member of, otherwise return all groups that the user is authorized to\n      edit (for example, sysadmin users are authorized to edit all groups)\n      (optional, default: False)\n    :type am-member: boolean\n\n    :returns: list of dictized groups that the user is authorized to edit\n    :rtype: list of dicts\n\n    ", "group_dataset_show": "Return the datasets (packages) of a group.\n\n    :param id: the id or name of the group\n    :type id: string\n    :param limit: the maximum number of datasets to return (optional)\n    :type limit: int\n\n    :rtype: list of dictionaries\n\n    ", "related_show": "Return a single related item.\n\n    :param id: the id of the related item to show\n    :type id: string\n\n    :rtype: dictionary\n\n    ", "member_roles_list": "Return the possible roles for members of groups and organizations.\n\n    :param group_type: the group type, either \"group\" or \"organization\"\n        (optional, default \"organization\")\n    :type id: string\n    :returns: a list of dictionaries each with two keys: \"text\" (the display\n        name of the role, e.g. \"Admin\") and \"value\" (the internal name of the\n        role, e.g. \"admin\")\n    :rtype: list of dictionaries\n\n    ", "group_list": "Return a list of the names of the site's groups.\n\n    :param order_by: the field to sort the list by, must be ``'name'`` or\n      ``'packages'`` (optional, default: ``'name'``) Deprecated use sort.\n    :type order_by: string\n    :param sort: sorting of the search results.  Optional.  Default:\n        \"name asc\" string of field name and sort-order. The allowed fields are\n        'name' and 'packages'\n    :type sort: string\n    :param groups: a list of names of the groups to return, if given only\n        groups whose names are in this list will be returned (optional)\n    :type groups: list of strings\n    :param all_fields: return full group dictionaries instead of  just names\n        (optional, default: ``False``)\n    :type all_fields: boolean\n\n    :rtype: list of strings\n\n    ", "followee_list": "Return the list of objects that are followed by the given user.\n\n    Returns all objects, of any type, that the given user is following\n    (e.g. followed users, followed datasets, followed groups.. ).\n\n    :param id: the id of the user\n    :type id: string\n\n    :param q: a query string to limit results by, only objects whose display\n        name begins with the given string (case-insensitive) wil be returned\n        (optional)\n    :type q: string\n\n    :rtype: list of dictionaries, each with keys 'type' (e.g. 'user',\n        'dataset' or 'group'), 'display_name' (e.g. a user's display name,\n        or a package's title) and 'dict' (e.g. a dict representing the\n        followed user, package or group, the same as the dict that would be\n        returned by user_show, package_show or group_show)\n\n    ", "resource_search": "\n    Searches for resources satisfying a given search criteria.\n\n    It returns a dictionary with 2 fields: ``count`` and ``results``.  The\n    ``count`` field contains the total number of Resources found without the\n    limit or query parameters having an effect.  The ``results`` field is a\n    list of dictized Resource objects.\n\n    The 'query' parameter is a required field.  It is a string of the form\n    ``{field}:{term}`` or a list of strings, each of the same form.  Within\n    each string, ``{field}`` is a field or extra field on the Resource domain\n    object.\n\n    If ``{field}`` is ``\"hash\"``, then an attempt is made to match the\n    `{term}` as a *prefix* of the ``Resource.hash`` field.\n\n    If ``{field}`` is an extra field, then an attempt is made to match against\n    the extra fields stored against the Resource.\n\n    Note: The search is limited to search against extra fields declared in\n    the config setting ``ckan.extra_resource_fields``.\n\n    Note: Due to a Resource's extra fields being stored as a json blob, the\n    match is made against the json string representation.  As such, false\n    positives may occur:\n\n    If the search criteria is: ::\n\n        query = \"field1:term1\"\n\n    Then a json blob with the string representation of: ::\n\n        {\"field1\": \"foo\", \"field2\": \"term1\"}\n\n    will match the search criteria!  This is a known short-coming of this\n    approach.\n\n    All matches are made ignoring case; and apart from the ``\"hash\"`` field,\n    a term matches if it is a substring of the field's value.\n\n    Finally, when specifying more than one search criteria, the criteria are\n    AND-ed together.\n\n    The ``order`` parameter is used to control the ordering of the results.\n    Currently only ordering one field is available, and in ascending order\n    only.\n\n    The ``fields`` parameter is deprecated as it is not compatible with calling\n    this action with a GET request to the action API.\n\n    The context may contain a flag, `search_query`, which if True will make\n    this action behave as if being used by the internal search api.  ie - the\n    results will not be dictized, and SearchErrors are thrown for bad search\n    queries (rather than ValidationErrors).\n\n    :param query: The search criteria.  See above for description.\n    :type query: string or list of strings of the form \"{field}:{term1}\"\n    :param fields: Deprecated\n    :type fields: dict of fields to search terms.\n    :param order_by: A field on the Resource model that orders the results.\n    :type order_by: string\n    :param offset: Apply an offset to the query.\n    :type offset: int\n    :param limit: Apply a limit to the query.\n    :type limit: int\n\n    :returns:  A dictionary with a ``count`` field, and a ``results`` field.\n    :rtype: dict\n\n    ", "dataset_relationships_list": "Return a dataset (package)'s relationships.\n\n    :param id: the id or name of the first package\n    :type id: string\n    :param id2: the id or name of the second package\n    :type id: string\n    :param rel: relationship as string see\n        :func:`ckan.logic.action.create.package_relationship_create()` for the\n        relationship types (optional)\n\n    :rtype: list of dictionaries\n\n    ", "group_activity_list": "Return a group's activity stream.\n\n    You must be authorized to view the group.\n\n    :param id: the id or name of the group\n    :type id: string\n    :param offset: where to start getting activity items from\n        (optional, default: 0)\n    :type offset: int\n    :param limit: the maximum number of activities to return\n        (optional, default: 31, the default value is configurable via the\n        ckan.activity_list_limit setting)\n    :type limit: int\n\n    :rtype: list of dictionaries\n\n    ", "revision_list": "Return a list of the IDs of the site's revisions.\n\n    :rtype: list of strings\n\n    ", "organization_revision_list": "Return an organization's revisions.\n\n    :param id: the name or id of the organization\n    :type id: string\n\n    :rtype: list of dictionaries\n\n    ", "member_list": "Return the members of a group.\n\n    The user must have permission to 'get' the group.\n\n    :param id: the id or name of the group\n    :type id: string\n    :param object_type: restrict the members returned to those of a given type,\n      e.g. ``'user'`` or ``'package'`` (optional, default: ``None``)\n    :type object_type: string\n    :param capacity: restrict the members returned to those with a given\n      capacity, e.g. ``'member'``, ``'editor'``, ``'admin'``, ``'public'``,\n      ``'private'`` (optional, default: ``None``)\n    :type capacity: string\n\n    :rtype: list of (id, type, capacity) tuples\n\n    :raises: :class:`ckan.logic.NotFound`: if the group doesn't exist\n\n    ", "recently_changed_datasets_activity_list": "Return the activity stream of all recently added or changed packages.\n\n    :param offset: where to start getting activity items from\n        (optional, default: 0)\n    :type offset: int\n    :param limit: the maximum number of activities to return\n        (optional, default: 31, the default value is configurable via the\n        ckan.activity_list_limit setting)\n    :type limit: int\n\n    :rtype: list of dictionaries\n\n    ", "dataset_show": "Return the metadata of a dataset (package) and its resources.\n\n    :param id: the id or name of the dataset\n    :type id: string\n    :param use_default_schema: use default package schema instead of\n        a custom schema defined with an IDatasetForm plugin (default: False)\n    :type use_default_schema: bool\n\n    :rtype: dictionary\n\n    ", "site_read": "Return ``True``.\n\n    :rtype: boolean\n\n    ", "dataset_autocomplete": "Return a list of datasets (packages) that match a string.\n\n    Datasets with names or titles that contain the query string will be\n    returned.\n\n    :param q: the string to search for\n    :type q: string\n    :param limit: the maximum number of resource formats to return (optional,\n        default: 10)\n    :type limit: int\n\n    :rtype: list of dictionaries\n\n    ", "dashboard_activity_list": "Return the authorized user's dashboard activity stream.\n\n    Unlike the activity dictionaries returned by other ``*_activity_list``\n    actions, these activity dictionaries have an extra boolean value with key\n    ``is_new`` that tells you whether the activity happened since the user last\n    viewed her dashboard (``'is_new': True``) or not (``'is_new': False``).\n\n    The user's own activities are always marked ``'is_new': False``.\n\n    :param offset: where to start getting activity items from\n        (optional, default: 0)\n    :type offset: int\n    :param limit: the maximum number of activities to return\n        (optional, default: 31, the default value is configurable via the\n        ``ckan.activity_list_limit`` setting)\n\n    :rtype: list of activity dictionaries\n\n    ", "organization_list": "Return a list of the names of the site's organizations.\n\n    :param order_by: the field to sort the list by, must be ``'name'`` or\n      ``'packages'`` (optional, default: ``'name'``) Deprecated use sort.\n    :type order_by: string\n    :param sort: sorting of the search results.  Optional.  Default:\n        \"name asc\" string of field name and sort-order. The allowed fields are\n        'name' and 'packages'\n    :type sort: string\n    :param organizations: a list of names of the groups to return, if given only\n        groups whose names are in this list will be returned (optional)\n    :type organizations: list of strings\n    :param all_fields: return full group dictionaries instead of  just names\n        (optional, default: ``False``)\n    :type all_fields: boolean\n\n    :rtype: list of strings\n\n    ", "user_followee_list": "Return the list of users that are followed by the given user.\n\n    :param id: the id of the user\n    :type id: string\n\n    :rtype: list of dictionaries\n\n    ", "vocabulary_list": "Return a list of all the site's tag vocabularies.\n\n    :rtype: list of dictionaries\n\n    ", "dataset_follower_list": "Return the list of users that are following the given dataset.\n\n    :param id: the id or name of the dataset\n    :type id: string\n\n    :rtype: list of dictionaries\n\n    ", "organization_list_for_user": "Return the list of organizations that the user is a member of.\n\n    :param permission: the permission the user has against the returned organizations\n      (optional, default: ``edit_group``)\n    :type permission: string\n\n    :returns: list of dictized organizations that the user is authorized to edit\n    :rtype: list of dicts\n\n    ", "organization_activity_list_html": "Return a organization's activity stream as HTML.\n\n    The activity stream is rendered as a snippet of HTML meant to be included\n    in an HTML page, i.e. it doesn't have any HTML header or footer.\n\n    :param id: the id or name of the organization\n    :type id: string\n\n    :rtype: string\n\n    ", "group_revision_list": "Return a group's revisions.\n\n    :param id: the name or id of the group\n    :type id: string\n\n    :rtype: list of dictionaries\n\n    ", "am_following_dataset": "Return ``True`` if you're following the given dataset, ``False`` if not.\n\n    :param id: the id or name of the dataset\n    :type id: string\n\n    :rtype: boolean\n\n    ", "group_follower_list": "Return the list of users that are following the given group.\n\n    :param id: the id or name of the group\n    :type id: string\n\n    :rtype: list of dictionaries\n\n    ", "group_followee_list": "Return the list of groups that are followed by the given user.\n\n    :param id: the id or name of the user\n    :type id: string\n\n    :rtype: list of dictionaries\n\n    ", "user_follower_count": "Return the number of followers of a user.\n\n    :param id: the id or name of the user\n    :type id: string\n\n    :rtype: int\n\n    ", "format_autocomplete": "Return a list of resource formats whose names contain a string.\n\n    :param q: the string to search for\n    :type q: string\n    :param limit: the maximum number of resource formats to return (optional,\n        default: 5)\n    :type limit: int\n\n    :rtype: list of strings\n\n    ", "activity_detail_list": "Return an activity's list of activity detail items.\n\n    :param id: the id of the activity\n    :type id: string\n    :rtype: list of dictionaries.\n\n    ", "resource_show": "Return the metadata of a resource.\n\n    :param id: the id of the resource\n    :type id: string\n\n    :rtype: dictionary\n\n    ", "user_activity_list": "Return a user's public activity stream.\n\n    You must be authorized to view the user's profile.\n\n\n    :param id: the id or name of the user\n    :type id: string\n    :param offset: where to start getting activity items from\n        (optional, default: 0)\n    :type offset: int\n    :param limit: the maximum number of activities to return\n        (optional, default: 31, the default value is configurable via the\n        ckan.activity_list_limit setting)\n    :type limit: int\n\n    :rtype: list of dictionaries\n\n    ", "tag_show": "Return the details of a tag and all its datasets.\n\n    :param id: the name or id of the tag\n    :type id: string\n\n    :returns: the details of the tag, including a list of all of the tag's\n        datasets and their details\n    :rtype: dictionary\n\n    ", "dataset_followee_list": "Return the list of datasets that are followed by the given user.\n\n    :param id: the id or name of the user\n    :type id: string\n\n    :rtype: list of dictionaries\n\n    ", "dataset_follower_count": "Return the number of followers of a dataset.\n\n    :param id: the id or name of the dataset\n    :type id: string\n\n    :rtype: int\n\n    ", "group_show": "Return the details of a group.\n\n    :param id: the id or name of the group\n    :type id: string\n    :param include_datasets: include a list of the group's datasets\n         (optional, default: ``True``)\n    :type id: boolean\n\n    :rtype: dictionary\n\n    .. note:: Only its first 1000 datasets are returned\n\n    ", "related_list": "Return a dataset's related items.\n\n    :param id: id or name of the dataset (optional)\n    :type id: string\n    :param dataset: dataset dictionary of the dataset (optional)\n    :type dataset: dictionary\n    :param type_filter: the type of related item to show (optional,\n      default: None, show all items)\n    :type type_filter: string\n    :param sort: the order to sort the related items in, possible values are\n      'view_count_asc', 'view_count_desc', 'created_asc' or 'created_desc'\n      (optional)\n    :type sort: string\n    :param featured: whether or not to restrict the results to only featured\n      related items (optional, default: False)\n    :type featured: bool\n\n    :rtype: list of dictionaries\n\n    ", "am_following_user": "Return ``True`` if you're following the given user, ``False`` if not.\n\n    :param id: the id or name of the user\n    :type id: string\n\n    :rtype: boolean\n\n    ", "dataset_activity_list": "Return a package's activity stream.\n\n    You must be authorized to view the package.\n\n    :param id: the id or name of the package\n    :type id: string\n    :param offset: where to start getting activity items from\n        (optional, default: 0)\n    :type offset: int\n    :param limit: the maximum number of activities to return\n        (optional, default: 31, the default value is configurable via the\n        ckan.activity_list_limit setting)\n    :type limit: int\n\n    :rtype: list of dictionaries\n\n    ", "resource_status_show": "Return the statuses of a resource's tasks.\n\n    :param id: the id of the resource\n    :type id: string\n\n    :rtype: list of (status, date_done, traceback, task_status) dictionaries\n\n    ", "roles_show": "Return the roles of all users and authorization groups for an object.\n\n    :param domain_object: a package or group name or id\n        to filter the results by\n    :type domain_object: string\n    :param user: a user name or id\n    :type user: string\n\n    :rtype: list of dictionaries\n\n    ", "license_list": "Return the list of licenses available for datasets on the site.\n\n    :rtype: list of dictionaries\n\n    ", "task_status_show": "Return a task status.\n\n    Either the ``id`` parameter *or* the ``entity_id``, ``task_type`` *and*\n    ``key`` parameters must be given.\n\n    :param id: the id of the task status (optional)\n    :type id: string\n    :param entity_id: the entity_id of the task status (optional)\n    :type entity_id: string\n    :param task_type: the task_type of the task status (optional)\n    :type tast_type: string\n    :param key: the key of the task status (optional)\n    :type key: string\n\n    :rtype: dictionary\n\n    ", "dataset_activity_list_html": "Return a package's activity stream as HTML.\n\n    The activity stream is rendered as a snippet of HTML meant to be included\n    in an HTML page, i.e. it doesn't have any HTML header or footer.\n\n    :param id: the id or name of the package\n    :type id: string\n    :param offset: where to start getting activity items from\n        (optional, default: 0)\n    :type offset: int\n    :param limit: the maximum number of activities to return\n        (optional, default: 31, the default value is configurable via the\n        ckan.activity_list_limit setting)\n    :type limit: int\n\n    :rtype: string\n\n    ", "revision_show": "Return the details of a revision.\n\n    :param id: the id of the revision\n    :type id: string\n\n    :rtype: dictionary\n\n    ", "dataset_search": "\n    Searches for packages satisfying a given search criteria.\n\n    This action accepts solr search query parameters (details below), and\n    returns a dictionary of results, including dictized datasets that match\n    the search criteria, a search count and also facet information.\n\n    **Solr Parameters:**\n\n    For more in depth treatment of each paramter, please read the `Solr\n    Documentation <http://wiki.apache.org/solr/CommonQueryParameters>`_.\n\n    This action accepts a *subset* of solr's search query parameters:\n\n\n    :param q: the solr query.  Optional.  Default: `\"*:*\"`\n    :type q: string\n    :param fq: any filter queries to apply.  Note: `+site_id:{ckan_site_id}`\n        is added to this string prior to the query being executed.\n    :type fq: string\n    :param sort: sorting of the search results.  Optional.  Default:\n        'relevance asc, metadata_modified desc'.  As per the solr\n        documentation, this is a comma-separated string of field names and\n        sort-orderings.\n    :type sort: string\n    :param rows: the number of matching rows to return.\n    :type rows: int\n    :param start: the offset in the complete result for where the set of\n        returned datasets should begin.\n    :type start: int\n    :param facet: whether to enable faceted results.  Default: \"true\".\n    :type facet: string\n    :param facet.mincount: the minimum counts for facet fields should be\n        included in the results.\n    :type facet.mincount: int\n    :param facet.limit: the maximum number of values the facet fields return.\n        A negative value means unlimited. This can be set instance-wide with\n        the :ref:`search.facets.limit` config option. Default is 50.\n    :type facet.limit: int\n    :param facet.field: the fields to facet upon.  Default empty.  If empty,\n        then the returned facet information is empty.\n    :type facet.field: list of strings\n\n\n    The following advanced Solr parameters are supported as well. Note that\n    some of these are only available on particular Solr versions. See Solr's\n    `dismax`_ and `edismax`_ documentation for further details on them:\n\n    ``qf``, ``wt``, ``bf``, ``boost``, ``tie``, ``defType``, ``mm``\n\n\n    .. _dismax: http://wiki.apache.org/solr/DisMaxQParserPlugin\n    .. _edismax: http://wiki.apache.org/solr/ExtendedDisMax\n\n\n    **Results:**\n\n    The result of this action is a dict with the following keys:\n\n    :rtype: A dictionary with the following keys\n    :param count: the number of results found.  Note, this is the total number\n        of results found, not the total number of results returned (which is\n        affected by limit and row parameters used in the input).\n    :type count: int\n    :param results: ordered list of datasets matching the query, where the\n        ordering defined by the sort parameter used in the query.\n    :type results: list of dictized datasets.\n    :param facets: DEPRECATED.  Aggregated information about facet counts.\n    :type facets: DEPRECATED dict\n    :param search_facets: aggregated information about facet counts.  The outer\n        dict is keyed by the facet field name (as used in the search query).\n        Each entry of the outer dict is itself a dict, with a \"title\" key, and\n        an \"items\" key.  The \"items\" key's value is a list of dicts, each with\n        \"count\", \"display_name\" and \"name\" entries.  The display_name is a\n        form of the name that can be used in titles.\n    :type search_facets: nested dict of dicts.\n    :param use_default_schema: use default package schema instead of\n        a custom schema defined with an IDatasetForm plugin (default: False)\n    :type use_default_schema: bool\n\n    An example result: ::\n\n     {'count': 2,\n      'results': [ { <snip> }, { <snip> }],\n      'search_facets': {u'tags': {'items': [{'count': 1,\n                                             'display_name': u'tolstoy',\n                                             'name': u'tolstoy'},\n                                            {'count': 2,\n                                             'display_name': u'russian',\n                                             'name': u'russian'}\n                                           ]\n                                 }\n                       }\n     }\n\n    **Limitations:**\n\n    The full solr query language is not exposed, including.\n\n    fl\n        The parameter that controls which fields are returned in the solr\n        query cannot be changed.  CKAN always returns the matched datasets as\n        dictionary objects.\n    ", "dataset_followee_count": "Return the number of datasets that are followed by the given user.\n\n    :param id: the id of the user\n    :type id: string\n\n    :rtype: int\n\n    ", "organization_show": "Return the details of a organization.\n\n    :param id: the id or name of the organization\n    :type id: string\n    :param include_datasets: include a list of the organization's datasets\n         (optional, default: ``True``)\n    :type id: boolean\n\n    :rtype: dictionary\n\n    .. note:: Only its first 1000 datasets are returned\n    ", "recently_changed_datasets_activity_list_html": "Return the activity stream of all recently changed packages as HTML.\n\n    The activity stream includes all recently added or changed packages. It is\n    rendered as a snippet of HTML meant to be included in an HTML page, i.e. it\n    doesn't have any HTML header or footer.\n\n    :param offset: where to start getting activity items from\n        (optional, default: 0)\n    :type offset: int\n    :param limit: the maximum number of activities to return\n        (optional, default: 31, the default value is configurable via the\n        ckan.activity_list_limit setting)\n    :type limit: int\n\n    :rtype: string\n\n    ", "group_followee_count": "Return the number of groups that are followed by the given user.\n\n    :param id: the id of the user\n    :type id: string\n\n    :rtype: int\n\n    ", "vocabulary_show": "Return a single tag vocabulary.\n\n    :param id: the id or name of the vocabulary\n    :type id: string\n    :return: the vocabulary.\n    :rtype: dictionary\n\n    ", "user_autocomplete": "Return a list of user names that contain a string.\n\n    :param q: the string to search for\n    :type q: string\n    :param limit: the maximum number of user names to return (optional,\n        default: 20)\n    :type limit: int\n\n    :rtype: a list of user dictionaries each with keys ``'name'``,\n        ``'fullname'``, and ``'id'``\n\n    ", "user_followee_count": "Return the number of users that are followed by the given user.\n\n    :param id: the id of the user\n    :type id: string\n\n    :rtype: int\n\n    ", "followee_count": "Return the number of objects that are followed by the given user.\n\n    Counts all objects, of any type, that the given user is following\n    (e.g. followed users, followed datasets, followed groups).\n\n    :param id: the id of the user\n    :type id: string\n\n    :rtype: int\n\n    ", "user_show": "Return a user account.\n\n    Either the ``id`` or the ``user_obj`` parameter must be given.\n\n    :param id: the id or name of the user (optional)\n    :type id: string\n    :param user_obj: the user dictionary of the user (optional)\n    :type user_obj: user dictionary\n\n    :rtype: dictionary\n\n    ", "term_translation_show": "Return the translations for the given term(s) and language(s).\n\n    :param terms: the terms to search for translations of, e.g. ``'Russian'``,\n        ``'romantic novel'``\n    :type terms: list of strings\n    :param lang_codes: the language codes of the languages to search for\n        translations into, e.g. ``'en'``, ``'de'`` (optional, default is to\n        search for translations into any language)\n    :type lang_codes: list of language code strings\n\n    :rtype: a list of term translation dictionaries each with keys ``'term'``\n        (the term searched for, in the source language), ``'term_translation'``\n        (the translation of the term into the target language) and\n        ``'lang_code'`` (the language code of the target language)\n\n    ", "user_activity_list_html": "Return a user's public activity stream as HTML.\n\n    The activity stream is rendered as a snippet of HTML meant to be included\n    in an HTML page, i.e. it doesn't have any HTML header or footer.\n\n    :param id: The id or name of the user.\n    :type id: string\n    :param offset: where to start getting activity items from\n        (optional, default: 0)\n    :type offset: int\n    :param limit: the maximum number of activities to return\n        (optional, default: 31, the default value is configurable via the\n        ckan.activity_list_limit setting)\n    :type limit: int\n\n    :rtype: string\n\n    ", "dataset_list": "Return a list of the names of the site's datasets (packages).\n\n    :param limit: if given, the list of datasets will be broken into pages of\n        at most ``limit`` datasets per page and only one page will be returned\n        at a time (optional)\n    :type limit: int\n    :param offset: when ``limit`` is given, the offset to start returning packages from\n    :type offset: int\n\n    :rtype: list of strings\n\n    ", "organization_activity_list": "Return a organization's activity stream.\n\n    :param id: the id or name of the organization\n    :type id: string\n\n    :rtype: list of dictionaries\n\n    ", "group_activity_list_html": "Return a group's activity stream as HTML.\n\n    The activity stream is rendered as a snippet of HTML meant to be included\n    in an HTML page, i.e. it doesn't have any HTML header or footer.\n\n    :param id: the id or name of the group\n    :type id: string\n    :param offset: where to start getting activity items from\n        (optional, default: 0)\n    :type offset: int\n    :param limit: the maximum number of activities to return\n        (optional, default: 31, the default value is configurable via the\n        ckan.activity_list_limit setting)\n    :type limit: int\n\n    :rtype: string\n\n    ", "dashboard_new_activities_count": "Return the number of new activities in the user's dashboard.\n\n    Return the number of new activities in the authorized user's dashboard\n    activity stream.\n\n    Activities from the user herself are not counted by this function even\n    though they appear in the dashboard (users don't want to be notified about\n    things they did themselves).\n\n    :rtype: int\n\n    ", "tag_search": "Return a list of tags whose names contain a given string.\n\n    By default only free tags (tags that don't belong to any vocabulary) are\n    searched. If the ``vocabulary_id`` argument is given then only tags\n    belonging to that vocabulary will be searched instead.\n\n    :param query: the string(s) to search for\n    :type query: string or list of strings\n    :param vocabulary_id: the id or name of the tag vocabulary to search in\n      (optional)\n    :type vocabulary_id: string\n    :param fields: deprecated\n    :type fields: dictionary\n    :param limit: the maximum number of tags to return\n    :type limit: int\n    :param offset: when ``limit`` is given, the offset to start returning tags\n        from\n    :type offset: int\n\n    :returns: A dictionary with the following keys:\n\n      ``'count'``\n        The number of tags in the result.\n\n      ``'results'``\n        The list of tags whose names contain the given string, a list of\n        dictionaries.\n\n    :rtype: dictionary\n\n    ", "dashboard_activity_list_html": "Return the authorized user's dashboard activity stream as HTML.\n\n    The activity stream is rendered as a snippet of HTML meant to be included\n    in an HTML page, i.e. it doesn't have any HTML header or footer.\n\n    :param id: the id or name of the user\n    :type id: string\n    :param offset: where to start getting activity items from\n        (optional, default: 0)\n    :type offset: int\n    :param limit: the maximum number of activities to return\n        (optional, default: 31, the default value is configurable via the\n        ckan.activity_list_limit setting)\n    :type limit: int\n\n    :rtype: string\n\n    ", "current_dataset_list_with_resources": "Return a list of the site's datasets (packages) and their resources.\n\n    The list is sorted most-recently-modified first.\n\n    :param limit: if given, the list of datasets will be broken into pages of\n        at most ``limit`` datasets per page and only one page will be returned\n        at a time (optional)\n    :type limit: int\n    :param offset: when ``limit`` is given, the offset to start returning packages from\n    :type offset: int\n    :param page: when ``limit`` is given, which page to return, Deprecated use ``offset``\n    :type page: int\n\n    :rtype: list of dictionaries\n\n    ", "tag_list": "Return a list of the site's tags.\n\n    By default only free tags (tags that don't belong to a vocabulary) are\n    returned. If the ``vocabulary_id`` argument is given then only tags\n    belonging to that vocabulary will be returned instead.\n\n    :param query: a tag name query to search for, if given only tags whose\n        names contain this string will be returned (optional)\n    :type query: string\n    :param vocabulary_id: the id or name of a vocabulary, if give only tags\n        that belong to this vocabulary will be returned (optional)\n    :type vocabulary_id: string\n    :param all_fields: return full tag dictionaries instead of just names\n        (optional, default: ``False``)\n    :type all_fields: boolean\n\n    :rtype: list of dictionaries\n\n    ", "am_following_group": "Return ``True`` if you're following the given group, ``False`` if not.\n\n    :param id: the id or name of the group\n    :type id: string\n\n    :rtype: boolean\n\n    ", "user_list": "Return a list of the site's user accounts.\n\n    :param q: restrict the users returned to those whose names contain a string\n      (optional)\n    :type q: string\n    :param order_by: which field to sort the list by (optional, default:\n      ``'name'``)\n    :type order_by: string\n\n    :rtype: list of dictionaries\n\n    ", "dataset_revision_list": "Return a dataset (package)'s revisions as a list of dictionaries.\n\n    :param id: the id or name of the dataset\n    :type id: string\n\n    ", "user_follower_list": "Return the list of users that are following the given user.\n\n    :param id: the id or name of the user\n    :type id: string\n\n    :rtype: list of dictionaries\n\n    "}}